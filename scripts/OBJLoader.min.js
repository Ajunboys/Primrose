THREE.OBJLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager,this.materials=null},THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setPath(this.path),f.load(a,function(a){b(e.parse(a))},c,d)},setPath:function(a){this.path=a},setMaterials:function(a){this.materials=a},parse:function(a){function b(a){var b={vertices:[],normals:[],uvs:[]},c={name:"",smooth:!0};j={name:a,geometry:b,material:c},k.push(j)}function c(a){var b=parseInt(a);return 3*(b>=0?b-1:b+m.length/3)}function d(a){var b=parseInt(a);return 3*(b>=0?b-1:b+n.length/3)}function e(a){var b=parseInt(a);return 2*(b>=0?b-1:b+o.length/2)}function f(a,b,c){j.geometry.vertices.push(m[a],m[a+1],m[a+2],m[b],m[b+1],m[b+2],m[c],m[c+1],m[c+2])}function g(a,b,c){j.geometry.normals.push(n[a],n[a+1],n[a+2],n[b],n[b+1],n[b+2],n[c],n[c+1],n[c+2])}function h(a,b,c){j.geometry.uvs.push(o[a],o[a+1],o[b],o[b+1],o[c],o[c+1])}function i(a,b,i,j,k,l,m,n,o,p,q,r){var s,t=c(a),u=c(b),v=c(i);void 0===j?f(t,u,v):(s=c(j),f(t,u,s),f(u,v,s)),void 0!==k&&(t=e(k),u=e(l),v=e(m),void 0===j?h(t,u,v):(s=e(n),h(t,u,s),h(u,v,s))),void 0!==o&&(t=d(o),u=d(p),v=d(q),void 0===j?g(t,u,v):(s=d(r),g(t,u,s),g(u,v,s)))}console.time("OBJLoader");var j,k=[],l=!1,m=[],n=[],o=[];b("");for(var p=/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,q=/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,r=/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,s=/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,t=/^f\s+((-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+))(?:\s+((-?\d+)\/(-?\d+)))?/,u=/^f\s+((-?\d+)\/(-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+)\/(-?\d+))(?:\s+((-?\d+)\/(-?\d+)\/(-?\d+)))?/,v=/^f\s+((-?\d+)\/\/(-?\d+))\s+((-?\d+)\/\/(-?\d+))\s+((-?\d+)\/\/(-?\d+))(?:\s+((-?\d+)\/\/(-?\d+)))?/,w=/^[og]\s*(.+)?/,x=/^s\s+(\d+|on|off)/,y=a.split("\n"),z=0;z<y.length;z++){var A=y[z];A=A.trim();var B;if(0!==A.length&&"#"!==A.charAt(0))if(null!==(B=p.exec(A)))m.push(parseFloat(B[1]),parseFloat(B[2]),parseFloat(B[3]));else if(null!==(B=q.exec(A)))n.push(parseFloat(B[1]),parseFloat(B[2]),parseFloat(B[3]));else if(null!==(B=r.exec(A)))o.push(parseFloat(B[1]),parseFloat(B[2]));else if(null!==(B=s.exec(A)))i(B[1],B[2],B[3],B[4]);else if(null!==(B=t.exec(A)))i(B[2],B[5],B[8],B[11],B[3],B[6],B[9],B[12]);else if(null!==(B=u.exec(A)))i(B[2],B[6],B[10],B[14],B[3],B[7],B[11],B[15],B[4],B[8],B[12],B[16]);else if(null!==(B=v.exec(A)))i(B[2],B[5],B[8],B[11],void 0,void 0,void 0,void 0,B[3],B[6],B[9],B[12]);else if(null!==(B=w.exec(A))){var C=B[0].substr(1).trim();l===!1?(l=!0,j.name=C):b(C)}else if(/^usemtl /.test(A))j.material.name=A.substring(7).trim();else if(/^mtllib /.test(A));else{if(null===(B=x.exec(A)))throw new Error("Unexpected line: "+A);j.material.smooth="1"===B[1]||"on"===B[1]}}for(var D=new THREE.Group,z=0,E=k.length;E>z;z++){j=k[z];var F=j.geometry,G=new THREE.BufferGeometry;G.addAttribute("position",new THREE.BufferAttribute(new Float32Array(F.vertices),3)),F.normals.length>0?G.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(F.normals),3)):G.computeVertexNormals(),F.uvs.length>0&&G.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(F.uvs),2));var H;null!==this.materials&&(H=this.materials.create(j.material.name)),H||(H=new THREE.MeshPhongMaterial,H.name=j.material.name),H.shading=j.material.smooth?THREE.SmoothShading:THREE.FlatShading;var I=new THREE.Mesh(G,H);I.name=j.name,D.add(I)}return console.timeEnd("OBJLoader"),D}};